* Diplomaterv szerkezete
** TODO Diplomaterv feladatkiírás
Ezt utólag kell vagy most?
** DONE Címoldal
** DONE Tartalomjegyzék
** DONE A diplomatervező nyilatkozata az önálló munkáról és az elektronikus adatok kezeléséről
** TODO Tartalmi összefoglaló magyarul és angolul (abstract)
Ezen egy kicsit kell még finomítani, hogy azon legyen a hangsúly amivel
általában foglalkoztam.
** DONE Bevezetés: 
*** DONE feladat értelmezése
Úgy legyen értelmezve hogy minél inkább az elkészítésen legyen a hangsúly
*** DONE a tervezés célja
Leírtam mi a cél, mit szeretnék elérni.
*** DONE a feladat indokoltsága
Adtam rá egy pár példát hogy mi minden helyzetben kellhet, valamint beszéltem a fejlesztő
eszközökről is.
*** DONE ros és yocto alapszintű bemutatása
Be vannak mutatva
*** DONE a diplomaterv felépítésének rövid összefoglalása
Erről szól az utolsó bekezdés.
** DONE A feladatkiírás pontosítása és részletes elemzése
Ezt lehet hogy kihagyom, mert nem nagyon van értelme lamentálni a feladaton.
Inkább írok egy hosszabb bevezetőt, amiben ismertetem hogy mi a helyzet mondjuk subchapterben
** DONE Előzmények (irodalomkutatás, hasonló alkotások), az ezekből levonható következtetések
Ide jöhet az összes hardware spec, meg shit, áramkörök, alkaltrészek, etc, de itt még/már nincsenek
tervezési shitek, csak az áramkörökhöz kapcsolódó dolgok.
** DONE Chapter 1 firmware és build
- A tervezés részletes leírása, a döntési lehetőségek értékelése és a választott megoldások indoklása
- A megtervezett műszaki alkotás értékelése, kritikai elemzése, továbbfejlesztési lehetőségek
** DONE Linux
*** Bevezető
miért kell nekünk linux, milyen problémát old meg?
milyen linuxra van szükségünk? mi a nehéz a feladatban,
miért nehéz összerakni? milyen lehetőségeink vannak?
*** Linux
Rövid bemutatás, koncepciók ismertetése stb. Erősen salvagable az eddigi szöveg, ami lényegében szinte csak linux cucc
*** Yocto
a Build nehézségei, komplex rendszer, megoldás: yocto project
Rövid buildroot összehasonlítás
build folyamat összefoglalása, általánosan package-re nézve: fetch unpack patch configure compile install package
működés bemutatása:
- receptek
- layerek
- append fileok
- config fileok (local, bbconfig stb)
- branchek és verziók

*** saját build és konfiguráció
specifikációk, mit kell tudnia a rendszernek, mire szeretnénk hogyan használni, mit pakoljunk bele hogy ezt elérjük
  
saját feladatban az implementációk:
networking, patchelés, patchek készítése, bbappend írása.
kísérlet a hotspottal, jó, de nem tökéletes.  instabil kapcsolat: ->  szar. legyen felcsatlakozva wifire

meta ros layer és lefordítása
ros integrálása a buildbe.

** TODO Chapter ros2

*** bevezetés
- eddig volt hardver firmware linux és most legyen a linuxon egy ros.
- Azért jó hogy  ne találjuk fel a kereket,
- robot operating system egységes platform, sokmindent felhasználhatunk amit mások megírtak
- jól dokumentált, sok robotikai alkalmazás van vele
*** ROS bemutatása
- robot funkcionalitásának gyors és átlátható fejlesztése
- a rendszer támogatja a robotoknál gyakori feladatokat.
- absztrakciós réteg
- több verziója is létezik, disztribúciók, releasek, lts, humble
**** koncepciói
  - nodeok
  - interfacek
    - servicek
    - actionok
    - topic
**** fejlesztés menete
- eszközök (rosdep, colcon)
- packagek
- workspacek
*** Saját ROS illesztés
- Fejlesztés menete, PCn lehet, colcon package workspace stuff.
- Specifikáció, mit kell csinálnunk az illesztéshez
- végrehajtás, hogyan raktuk össze amit össze kell rakni
- action? elméletileg hogy kellett volna, de nincs motor, ezért nem lett meg.
- mi az ami kimaradt, de lehetett volna?
*** Útvonalkeresés ROS segítségével
- nem volt rá idő, de elméletben így kellene
- ros modulok keresése, tutorialok, algoritmusok
** TODO Chapter 3 útvonal tervezés
- A tervezés részletes leírása, a döntési lehetőségek értékelése és a választott megoldások indoklása
** TODO Részletes és pontos irodalomjegyzék
** TODO Függelék(ek)
** TODO képek
*** képek listája
**** DONE VL53L1 szenzorok ábrabra
**** DONE motorok
**** TODO tápáramkör topológiája
**** DONE ctrl schematic és layout ?
**** DONE csatlakozókat szemléltető ábra
**** DONE Differenciális robot ábra
**** TODO freecad ábra
**** DONE üzenet protokol ábra (táblázatos, hogy mikor milyen üzenetek követhetik egymást)
**** DONE Firmware vezérlés blokkdiagrammja
**** TODO optimalizációs mérések blokkdiagram
* Tippek
- \medsip parancsal lehet uj bekkezdést csinálni és azzal telik sok hely.
- mindenhova tegyünk ábrákat ahol csak el lehet képzelni.
- ami nem megy most az todo
* Feladatpontok
** Mutassa be a Yocto project és a ROS2 rendszereket
** Elemezze a ROS2 integrálását a yocto környezetben
** Készítsen robotot amely autonóm mozgásra és absztrakt környezetben tájékozódásra képes.
Ide lehet kéne még a ros2 action amivel haladni tudunk.
** Demonstrálja a rendszer képességeit egy labirintusból kitaláló alkalmazással (Ez veszett fejsze)
** Dokumentálja és automatizálja a robot szoftverének előállítását.
Le tudjuk vajon fordítani a firmware-t?
* Itt tartok
[[file:text/chapters/chapter-3-overview.tex::552][link]]
